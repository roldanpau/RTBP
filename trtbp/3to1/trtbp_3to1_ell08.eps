%!PS-Adobe-2.0 EPSF-2.0
%%Title: trtbp_3to1_ell08.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Thu Jan 10 15:56:21 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (trtbp_3to1_ell08.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Pau Roldan,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jan 10 15:56:21 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1710 448 M
63 0 V
4361 0 R
-63 0 V
-4445 0 R
(-0.8) Rshow
1.000 UL
LTb
1710 1001 M
63 0 V
4361 0 R
-63 0 V
-4445 0 R
(-0.6) Rshow
1.000 UL
LTb
1710 1554 M
63 0 V
4361 0 R
-63 0 V
-4445 0 R
(-0.4) Rshow
1.000 UL
LTb
1710 2107 M
63 0 V
4361 0 R
-63 0 V
-4445 0 R
(-0.2) Rshow
1.000 UL
LTb
1710 2660 M
63 0 V
4361 0 R
-63 0 V
-4445 0 R
( 0) Rshow
1.000 UL
LTb
1710 3213 M
63 0 V
4361 0 R
-63 0 V
-4445 0 R
( 0.2) Rshow
1.000 UL
LTb
1710 3766 M
63 0 V
4361 0 R
-63 0 V
-4445 0 R
( 0.4) Rshow
1.000 UL
LTb
1710 4319 M
63 0 V
4361 0 R
-63 0 V
-4445 0 R
( 0.6) Rshow
1.000 UL
LTb
1710 4872 M
63 0 V
4361 0 R
-63 0 V
-4445 0 R
( 0.8) Rshow
1.000 UL
LTb
1710 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.6) Cshow
1.000 UL
LTb
2263 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.4) Cshow
1.000 UL
LTb
2816 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
(-0.2) Cshow
1.000 UL
LTb
3369 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0) Cshow
1.000 UL
LTb
3922 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.2) Cshow
1.000 UL
LTb
4475 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.4) Cshow
1.000 UL
LTb
5028 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.6) Cshow
1.000 UL
LTb
5581 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0.8) Cshow
1.000 UL
LTb
6134 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 1) Cshow
1.000 UL
LTb
1.000 UL
LTb
1710 4872 N
0 -4424 V
4424 0 V
0 4424 V
-4424 0 V
Z stroke
LCb setrgbcolor
1136 2660 M
currentpoint gsave translate 90 rotate 0 0 M
(y) Cshow
grestore
LTb
LCb setrgbcolor
3922 98 M
(x) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
5483 4739 M
(H=-1.456, C=2.913) Rshow
LT0
5567 4739 M
399 0 V
3629 2660 M
-13 116 V
-37 105 V
-50 90 V
-57 76 V
-59 65 V
-58 56 V
-58 48 V
-56 44 V
-54 38 V
-52 36 V
-50 32 V
-48 31 V
-47 28 V
-44 26 V
-43 26 V
-41 24 V
-40 23 V
-38 22 V
-36 21 V
-36 21 V
-34 20 V
-32 20 V
-32 20 V
-31 19 V
-29 18 V
-28 19 V
-27 18 V
-27 18 V
-25 17 V
-25 18 V
-23 17 V
-23 17 V
-22 18 V
-21 16 V
-20 17 V
-19 17 V
-19 17 V
-18 16 V
-17 17 V
-17 16 V
-16 16 V
-15 16 V
-14 17 V
-14 16 V
-13 16 V
-13 15 V
-12 16 V
-11 16 V
-11 16 V
-11 15 V
-9 16 V
-9 15 V
-9 15 V
-8 15 V
-8 16 V
-7 15 V
-6 15 V
-6 14 V
-6 15 V
-5 15 V
-5 14 V
-4 14 V
-3 15 V
-4 14 V
-2 14 V
-3 14 V
-2 13 V
-1 14 V
-1 13 V
-1 14 V
-1 13 V
0 13 V
1 12 V
1 13 V
1 13 V
1 12 V
2 12 V
3 12 V
2 12 V
3 11 V
3 11 V
4 12 V
4 10 V
4 11 V
4 11 V
5 10 V
5 10 V
6 10 V
5 9 V
6 10 V
6 9 V
7 9 V
6 8 V
7 9 V
8 8 V
7 8 V
8 7 V
7 8 V
8 7 V
9 6 V
8 7 V
9 6 V
stroke 2143 4711 M
9 6 V
9 6 V
9 5 V
9 5 V
10 5 V
10 4 V
9 4 V
10 4 V
11 3 V
10 4 V
10 2 V
11 3 V
10 2 V
11 2 V
11 1 V
11 2 V
11 0 V
11 1 V
11 0 V
11 0 V
11 -1 V
12 -1 V
11 -1 V
11 -2 V
12 -2 V
11 -3 V
12 -2 V
11 -4 V
11 -3 V
12 -4 V
11 -5 V
12 -4 V
11 -6 V
12 -5 V
11 -6 V
11 -7 V
11 -7 V
11 -7 V
12 -8 V
11 -8 V
11 -8 V
10 -9 V
11 -10 V
11 -10 V
10 -10 V
11 -11 V
10 -11 V
10 -12 V
10 -12 V
10 -13 V
10 -13 V
9 -13 V
9 -14 V
10 -15 V
9 -15 V
8 -16 V
9 -16 V
8 -17 V
9 -17 V
8 -18 V
7 -18 V
8 -19 V
7 -20 V
7 -20 V
7 -20 V
7 -22 V
6 -21 V
6 -23 V
6 -23 V
5 -24 V
5 -25 V
5 -25 V
5 -26 V
4 -27 V
4 -27 V
3 -29 V
4 -29 V
3 -30 V
3 -31 V
2 -32 V
2 -33 V
2 -33 V
2 -35 V
1 -37 V
2 -37 V
1 -38 V
0 -40 V
1 -41 V
1 -43 V
0 -44 V
1 -46 V
0 -48 V
1 -50 V
1 -52 V
2 -55 V
3 -57 V
4 -60 V
5 -64 V
7 -66 V
11 -71 V
15 -75 V
20 -79 V
29 -84 V
40 -88 V
stroke 3022 2657 M
57 -87 V
76 -82 V
96 -66 V
108 -41 V
109 -18 V
102 2 V
92 12 V
85 20 V
76 24 V
70 26 V
65 27 V
60 28 V
56 28 V
53 27 V
49 27 V
47 26 V
45 25 V
43 25 V
41 23 V
39 23 V
38 22 V
37 21 V
36 20 V
34 20 V
33 18 V
33 18 V
31 17 V
31 16 V
30 16 V
29 14 V
28 14 V
28 13 V
27 13 V
27 12 V
26 11 V
26 10 V
25 10 V
24 9 V
24 9 V
24 8 V
23 7 V
23 7 V
22 6 V
22 5 V
22 6 V
21 4 V
21 4 V
20 4 V
20 3 V
20 2 V
19 2 V
19 2 V
19 1 V
18 1 V
18 0 V
17 0 V
18 -1 V
17 -1 V
16 -1 V
16 -2 V
16 -2 V
16 -3 V
15 -2 V
15 -4 V
14 -3 V
15 -4 V
13 -4 V
14 -5 V
13 -5 V
13 -5 V
13 -5 V
12 -6 V
12 -6 V
12 -6 V
11 -7 V
11 -7 V
10 -7 V
11 -7 V
10 -8 V
9 -7 V
10 -8 V
9 -9 V
8 -8 V
9 -8 V
7 -9 V
8 -9 V
7 -9 V
7 -9 V
7 -10 V
6 -9 V
6 -10 V
6 -10 V
5 -10 V
5 -10 V
5 -10 V
4 -10 V
4 -11 V
4 -10 V
3 -11 V
3 -10 V
3 -11 V
2 -11 V
3 -10 V
1 -11 V
stroke 5760 2710 M
2 -11 V
1 -11 V
0 -11 V
1 -11 V
0 -11 V
-1 -11 V
0 -11 V
-1 -10 V
-2 -11 V
-1 -11 V
-2 -11 V
-3 -11 V
-2 -10 V
-3 -11 V
-3 -11 V
-4 -10 V
-4 -10 V
-4 -11 V
-5 -10 V
-5 -10 V
-5 -10 V
-6 -10 V
-6 -9 V
-6 -10 V
-7 -9 V
-7 -10 V
-7 -9 V
-8 -9 V
-7 -8 V
-9 -9 V
-8 -8 V
-9 -9 V
-10 -8 V
-9 -7 V
-10 -8 V
-10 -7 V
-11 -7 V
-11 -7 V
-11 -7 V
-12 -6 V
-11 -6 V
-13 -6 V
-12 -5 V
-13 -6 V
-13 -4 V
-14 -5 V
-14 -4 V
-14 -4 V
-14 -4 V
-15 -3 V
-15 -3 V
-16 -3 V
-16 -2 V
-16 -2 V
-16 -1 V
-17 -1 V
-17 -1 V
-18 0 V
-18 0 V
-18 1 V
-18 1 V
-19 1 V
-20 2 V
-19 3 V
-20 3 V
-21 3 V
-20 4 V
-21 5 V
-22 5 V
-22 5 V
-22 7 V
-23 6 V
-23 7 V
-24 8 V
-24 9 V
-24 9 V
-25 10 V
-26 10 V
-26 11 V
-26 12 V
-27 12 V
-28 13 V
-29 14 V
-29 14 V
-30 16 V
-30 16 V
-31 17 V
-33 17 V
-33 19 V
-34 19 V
-35 20 V
-37 21 V
-38 22 V
-39 23 V
-41 23 V
-42 25 V
-45 25 V
-47 26 V
-49 27 V
-52 27 V
-56 27 V
-59 28 V
-64 27 V
-70 27 V
stroke 3832 2896 M
-75 24 V
-84 21 V
-91 13 V
-101 3 V
-108 -14 V
-109 -39 V
-98 -63 V
-79 -80 V
-59 -87 V
-42 -88 V
-30 -84 V
-21 -80 V
-15 -76 V
-11 -71 V
-8 -67 V
-6 -64 V
-4 -60 V
-3 -58 V
-1 -55 V
-2 -52 V
-1 -50 V
0 -49 V
-1 -46 V
0 -44 V
-1 -43 V
-1 -42 V
0 -40 V
-1 -38 V
-1 -38 V
-2 -36 V
-1 -35 V
-2 -34 V
-2 -33 V
-3 -32 V
-3 -31 V
-3 -30 V
-3 -30 V
-4 -28 V
-4 -28 V
-4 -27 V
-4 -26 V
-5 -25 V
-5 -25 V
-6 -24 V
-5 -23 V
-6 -23 V
-7 -22 V
-6 -21 V
-7 -21 V
-7 -20 V
-7 -20 V
-8 -19 V
-7 -18 V
-8 -18 V
-8 -17 V
-9 -17 V
-8 -16 V
-9 -16 V
-9 -15 V
-9 -15 V
-10 -14 V
-9 -14 V
-10 -13 V
-10 -13 V
-10 -12 V
-10 -12 V
-10 -11 V
-10 -11 V
-11 -10 V
-11 -10 V
-10 -10 V
-11 -9 V
-11 -8 V
-11 -8 V
-11 -8 V
-11 -7 V
-11 -7 V
-12 -7 V
-11 -6 V
-11 -6 V
-12 -5 V
-11 -5 V
-12 -4 V
-11 -4 V
-12 -4 V
-11 -3 V
-11 -3 V
-12 -3 V
-11 -2 V
-12 -2 V
-11 -1 V
-11 -1 V
-12 -1 V
-11 0 V
-11 0 V
-11 1 V
-11 0 V
-11 1 V
-11 2 V
-10 2 V
-11 2 V
-11 2 V
-10 3 V
-10 3 V
stroke 2230 566 M
-10 4 V
-10 3 V
-10 4 V
-10 5 V
-9 4 V
-10 5 V
-9 6 V
-9 5 V
-9 6 V
-9 6 V
-8 7 V
-9 7 V
-8 7 V
-7 7 V
-8 7 V
-8 8 V
-7 8 V
-7 9 V
-6 8 V
-7 9 V
-6 9 V
-6 9 V
-6 10 V
-5 10 V
-5 10 V
-5 10 V
-5 11 V
-4 10 V
-4 11 V
-3 11 V
-4 11 V
-3 12 V
-2 12 V
-2 12 V
-2 12 V
-2 12 V
-1 12 V
-1 13 V
0 13 V
-1 13 V
1 13 V
0 13 V
1 13 V
2 14 V
2 14 V
2 13 V
3 14 V
3 15 V
4 14 V
4 14 V
4 15 V
6 14 V
5 15 V
6 15 V
6 15 V
7 15 V
8 15 V
8 15 V
9 15 V
9 15 V
9 16 V
10 15 V
11 16 V
12 16 V
11 16 V
13 15 V
13 16 V
14 16 V
14 17 V
15 16 V
16 16 V
17 16 V
17 17 V
18 16 V
18 17 V
20 17 V
20 16 V
21 17 V
21 17 V
23 18 V
23 17 V
25 17 V
25 18 V
26 18 V
27 18 V
29 18 V
29 19 V
30 19 V
32 19 V
32 20 V
34 20 V
35 21 V
37 21 V
38 22 V
39 23 V
41 24 V
42 25 V
45 27 V
46 28 V
47 30 V
50 32 V
52 35 V
54 38 V
56 43 V
stroke 3290 2098 M
57 48 V
59 55 V
59 63 V
57 75 V
52 88 V
38 104 V
17 114 V
0 15 V
1.000 UP
stroke
LT1
LTb
5483 4599 M
(L1) Rshow
LT1
5947 2660 Pls
5766 4599 Pls
1.000 UL
LTb
1710 4872 N
0 -4424 V
4424 0 V
0 4424 V
-4424 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
