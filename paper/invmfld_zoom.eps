%!PS-Adobe-2.0 EPSF-2.0
%%Title: invmfld_zoom.tex
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Wed Apr 21 23:49:16 2010
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (invmfld_zoom.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Pau Roldan,3.05,15852,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Apr 21 23:49:16 2010)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
LCb setrgbcolor
1254 660 M
63 0 V
5509 0 R
-63 0 V
stroke
LTb
1254 1191 M
63 0 V
5509 0 R
-63 0 V
1254 1723 M
63 0 V
5509 0 R
-63 0 V
1254 2254 M
63 0 V
5509 0 R
-63 0 V
1254 2786 M
63 0 V
5509 0 R
-63 0 V
1254 3317 M
63 0 V
5509 0 R
-63 0 V
1254 3849 M
63 0 V
5509 0 R
-63 0 V
1254 4380 M
63 0 V
5509 0 R
-63 0 V
1315 660 M
0 63 V
0 3657 R
0 -63 V
1928 660 M
0 63 V
0 3657 R
0 -63 V
2540 660 M
0 63 V
0 3657 R
0 -63 V
3152 660 M
0 63 V
0 3657 R
0 -63 V
3764 660 M
0 63 V
0 3657 R
0 -63 V
4377 660 M
0 63 V
0 3657 R
0 -63 V
4989 660 M
0 63 V
0 3657 R
0 -63 V
5601 660 M
0 63 V
0 3657 R
0 -63 V
6214 660 M
0 63 V
0 3657 R
0 -63 V
6826 660 M
0 63 V
0 3657 R
0 -63 V
-5572 63 R
0 -3720 V
5572 0 V
0 3720 V
-5572 0 V
1.000 UP
stroke
LT0
LC0 setrgbcolor
LTb
LCb setrgbcolor
LT0
LC0 setrgbcolor
5971 4207 M
591 0 V
1254 1106 M
70 5 V
71 7 V
70 8 V
70 9 V
69 10 V
69 11 V
68 13 V
67 13 V
67 14 V
67 15 V
65 15 V
65 17 V
65 17 V
64 18 V
64 18 V
62 19 V
63 20 V
62 20 V
61 20 V
61 21 V
60 21 V
60 22 V
59 22 V
58 22 V
58 23 V
58 23 V
57 23 V
56 23 V
56 24 V
56 24 V
55 24 V
54 24 V
54 24 V
53 24 V
53 25 V
53 24 V
51 25 V
52 25 V
51 24 V
50 25 V
50 25 V
49 25 V
49 24 V
48 25 V
48 25 V
47 24 V
47 25 V
46 25 V
46 24 V
46 25 V
44 24 V
45 24 V
44 24 V
43 25 V
43 24 V
43 23 V
41 24 V
42 24 V
41 23 V
61 35 V
80 47 V
79 46 V
76 46 V
74 44 V
73 44 V
70 44 V
69 42 V
67 41 V
65 41 V
63 40 V
61 39 V
59 38 V
58 37 V
55 36 V
54 36 V
52 34 V
50 33 V
49 33 V
46 31 V
45 31 V
43 29 V
42 28 V
39 28 V
38 26 V
36 26 V
35 24 V
32 24 V
31 22 V
30 21 V
27 21 V
26 19 V
25 19 V
22 17 V
21 16 V
20 16 V
17 14 V
17 13 V
14 12 V
13 12 V
11 10 V
10 9 V
8 8 V
6409 3569 L
5 6 V
4 5 V
1 4 V
1 4 V
-2 2 V
-2 1 V
-5 1 V
-6 -1 V
-7 -1 V
-9 -3 V
-10 -3 V
-12 -5 V
-13 -5 V
-15 -6 V
-16 -7 V
-18 -8 V
-29 -14 V
-45 -22 V
-50 -26 V
-56 -29 V
-61 -32 V
-67 -36 V
-72 -39 V
-77 -41 V
-82 -45 V
-87 -48 V
-91 -50 V
-96 -52 V
-99 -55 V
-104 -56 V
-107 -58 V
-111 -60 V
-114 -61 V
-116 -62 V
-119 -62 V
-120 -63 V
-123 -63 V
-123 -63 V
-125 -62 V
-125 -61 V
-125 -60 V
-124 -59 V
-124 -58 V
-123 -55 V
-121 -54 V
-119 -51 V
-117 -49 V
-115 -46 V
-112 -44 V
-108 -41 V
-105 -38 V
-102 -36 V
-98 -33 V
-94 -31 V
-90 -28 V
-86 -25 V
-81 -23 V
-78 -21 V
-73 -19 V
-69 -17 V
-65 -15 V
-60 -13 V
-56 -12 V
-51 -10 V
-47 -9 V
-43 -8 V
-38 -7 V
-34 -6 V
-30 -5 V
-25 -5 V
-21 -3 V
-17 -3 V
-12 -3 V
-8 -2 V
-4 -1 V
1 -1 V
7 -1 V
24 0 V
37 3 V
48 4 V
57 6 V
64 7 V
66 8 V
66 9 V
64 9 V
58 9 V
51 6 V
40 5 V
29 1 V
16 -2 V
2 -6 V
-13 -10 V
-29 -14 V
-44 -18 V
-60 -22 V
-75 -24 V
-91 -26 V
-105 -27 V
-119 -26 V
-132 -25 V
-144 -21 V
-95 -9 V
stroke
LT1
LC1 setrgbcolor
LTb
LCb setrgbcolor
LT1
LC1 setrgbcolor
5971 3987 M
591 0 V
1254 1370 M
43 5 V
67 9 V
67 11 V
65 11 V
65 12 V
65 14 V
64 14 V
63 15 V
63 15 V
62 16 V
62 17 V
61 18 V
61 18 V
60 18 V
60 19 V
59 19 V
58 20 V
58 20 V
58 21 V
57 21 V
56 21 V
56 21 V
56 21 V
54 22 V
55 22 V
54 22 V
53 23 V
53 22 V
53 22 V
52 23 V
52 23 V
51 22 V
50 23 V
51 23 V
49 23 V
49 22 V
49 23 V
49 23 V
47 22 V
48 23 V
47 23 V
47 22 V
46 22 V
45 23 V
46 22 V
44 22 V
45 22 V
44 22 V
43 22 V
43 21 V
43 22 V
42 21 V
42 21 V
42 21 V
41 21 V
40 20 V
40 21 V
61 31 V
80 41 V
78 39 V
77 40 V
75 38 V
74 37 V
72 36 V
70 36 V
68 34 V
67 34 V
66 32 V
64 31 V
62 31 V
61 29 V
59 28 V
58 28 V
56 26 V
55 26 V
53 24 V
52 23 V
50 23 V
48 21 V
48 21 V
45 19 V
44 19 V
43 17 V
41 17 V
40 16 V
38 15 V
37 15 V
36 13 V
33 13 V
33 12 V
31 11 V
29 10 V
28 10 V
26 9 V
25 8 V
24 8 V
22 6 V
21 7 V
19 5 V
18 5 V
16 4 V
15 4 V
6380 3452 L
12 2 V
11 2 V
9 1 V
8 0 V
6 0 V
5 -1 V
3 -1 V
2 -2 V
1 -2 V
-1 -3 V
-2 -4 V
-3 -5 V
-5 -4 V
-6 -6 V
-12 -9 V
-21 -15 V
-27 -18 V
-32 -19 V
-38 -22 V
-43 -25 V
-48 -27 V
-54 -29 V
-58 -32 V
-64 -35 V
-68 -37 V
-73 -40 V
-78 -42 V
-82 -45 V
-86 -48 V
-90 -50 V
-94 -52 V
-97 -55 V
-101 -57 V
-103 -60 V
-107 -61 V
-109 -62 V
-112 -64 V
-114 -66 V
-116 -66 V
-117 -66 V
-119 -68 V
-119 -67 V
-120 -67 V
-121 -66 V
-121 -66 V
-120 -65 V
-120 -63 V
-119 -62 V
-117 -59 V
-117 -58 V
-114 -56 V
-112 -53 V
-111 -51 V
-107 -48 V
-105 -45 V
-102 -42 V
-99 -40 V
-95 -37 V
-92 -34 V
-89 -32 V
-84 -29 V
-81 -26 V
-77 -24 V
-73 -21 V
-69 -20 V
-65 -17 V
-61 -15 V
-57 -13 V
-52 -12 V
-48 -10 V
-44 -8 V
-39 -7 V
-35 -6 V
-30 -5 V
-38 -5 V
-35 -5 V
-17 0 V
0 1 V
17 5 V
32 7 V
45 10 V
55 13 V
64 15 V
68 18 V
72 20 V
72 21 V
69 22 V
64 22 V
56 21 V
48 19 V
37 17 V
26 13 V
13 10 V
-1 5 V
-15 2 V
-29 -3 V
-44 -7 V
-58 -11 V
-72 -14 V
-85 -16 V
-99 -18 V
-112 -18 V
-123 -18 V
-136 -15 V
1254 1141 L
stroke
LTb
LCb setrgbcolor
1254 4380 M
0 -3720 V
5572 0 V
0 3720 V
-5572 0 V
1.000 UP
stroke
LTb
stroke
grestore
end
showpage
%%Trailer
