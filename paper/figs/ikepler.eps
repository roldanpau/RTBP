%!PS-Adobe-2.0 EPSF-2.0
%%Title: ikepler.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Thu May 12 16:19:40 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ikepler.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Pau Roldan,,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu May 12 16:19:40 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
686 448 M
63 0 V
6241 0 R
-63 0 V
602 448 M
( 3) Rshow
1.000 UL
LTb
686 1185 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 2) Rshow
1.000 UL
LTb
686 1923 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 1) Rshow
1.000 UL
LTb
686 2660 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 0) Rshow
1.000 UL
LTb
686 3397 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 1) Rshow
1.000 UL
LTb
686 4135 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 2) Rshow
1.000 UL
LTb
686 4872 M
63 0 V
6241 0 R
-63 0 V
-6325 0 R
( 3) Rshow
1.000 UL
LTb
686 448 M
0 63 V
0 4361 R
0 -63 V
686 308 M
( 7) Cshow
1.000 UL
LTb
1386 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 6) Cshow
1.000 UL
LTb
2087 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 5) Cshow
1.000 UL
LTb
2787 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 4) Cshow
1.000 UL
LTb
3488 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 3) Cshow
1.000 UL
LTb
4188 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 2) Cshow
1.000 UL
LTb
4889 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 1) Cshow
1.000 UL
LTb
5589 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 0) Cshow
1.000 UL
LTb
6290 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 1) Cshow
1.000 UL
LTb
6990 448 M
0 63 V
0 4361 R
0 -63 V
0 -4501 R
( 2) Cshow
1.000 UL
LTb
1.000 UL
LTb
686 4872 N
686 448 L
6304 0 V
0 4424 V
-6304 0 V
Z stroke
LCb setrgbcolor
280 2660 M
currentpoint gsave translate 90 rotate 0 0 M
(y) Cshow
grestore
LTb
LCb setrgbcolor
3838 98 M
(x) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
6339 4739 M
(analytical) Rshow
LT0
6423 4739 M
399 0 V
6501 2660 M
-1 61 V
-3 61 V
-6 61 V
-8 61 V
-10 62 V
-12 61 V
-16 62 V
-17 62 V
-20 63 V
-24 62 V
-25 64 V
-29 63 V
-33 64 V
-35 65 V
-39 64 V
-44 66 V
-47 65 V
-51 66 V
-57 66 V
-61 67 V
-67 66 V
-73 67 V
-79 66 V
-86 65 V
-93 65 V
-101 64 V
-110 62 V
-119 59 V
-128 57 V
-139 53 V
-150 49 V
-162 42 V
-173 36 V
-186 27 V
-197 16 V
-210 4 V
-220 -11 V
-231 -28 V
-238 -48 V
-243 -70 V
-245 -94 V
2471 4352 L
2237 4204 L
2019 4028 L
1822 3824 L
1654 3596 L
1521 3345 L
-93 -267 V
-47 -277 V
0 -282 V
47 -277 V
93 -267 V
133 -251 V
168 -228 V
197 -204 V
218 -176 V
2471 968 L
2713 847 L
245 -94 V
243 -70 V
238 -48 V
231 -28 V
220 -11 V
210 4 V
197 16 V
186 27 V
173 36 V
162 42 V
150 49 V
139 53 V
128 57 V
119 59 V
110 62 V
101 64 V
93 65 V
86 65 V
79 66 V
73 67 V
67 66 V
61 67 V
57 66 V
51 66 V
47 65 V
44 66 V
39 64 V
35 65 V
33 64 V
29 63 V
25 64 V
24 62 V
20 63 V
17 62 V
16 62 V
12 61 V
10 62 V
8 61 V
6 61 V
3 61 V
1 61 V
1.000 UP
stroke
LT1
LTb
6339 4599 M
(numerical) Rshow
LT1
6501 2660 Pls
6501 2660 Pls
6501 2660 Pls
6501 2660 Pls
6501 2660 Pls
6501 2660 Pls
6501 2660 Pls
6501 2661 Pls
6501 2661 Pls
6501 2663 Pls
6501 2665 Pls
6501 2668 Pls
6501 2672 Pls
6501 2679 Pls
6501 2688 Pls
6501 2702 Pls
6500 2721 Pls
6499 2742 Pls
6498 2769 Pls
6496 2800 Pls
6492 2834 Pls
6488 2869 Pls
6483 2904 Pls
6478 2940 Pls
6471 2976 Pls
6463 3014 Pls
6455 3053 Pls
6445 3091 Pls
6435 3128 Pls
6423 3165 Pls
6412 3202 Pls
6399 3238 Pls
6386 3274 Pls
6371 3309 Pls
6357 3344 Pls
6342 3378 Pls
6326 3411 Pls
6309 3444 Pls
6292 3477 Pls
6274 3510 Pls
6255 3544 Pls
6233 3579 Pls
6210 3616 Pls
6186 3653 Pls
6161 3688 Pls
6136 3723 Pls
6110 3756 Pls
6084 3789 Pls
6058 3821 Pls
6031 3852 Pls
6004 3882 Pls
5976 3912 Pls
5949 3940 Pls
5921 3968 Pls
5893 3995 Pls
5864 4022 Pls
5834 4049 Pls
5804 4075 Pls
5773 4101 Pls
5741 4127 Pls
5708 4153 Pls
5674 4179 Pls
5639 4204 Pls
5603 4229 Pls
5565 4255 Pls
5527 4280 Pls
5486 4305 Pls
5441 4332 Pls
5395 4358 Pls
5346 4385 Pls
5298 4410 Pls
5249 4434 Pls
5201 4456 Pls
5153 4477 Pls
5106 4497 Pls
5058 4516 Pls
5012 4534 Pls
4965 4551 Pls
4919 4567 Pls
4873 4582 Pls
4827 4596 Pls
4781 4609 Pls
4736 4622 Pls
4690 4633 Pls
4644 4644 Pls
4598 4654 Pls
4552 4664 Pls
4504 4673 Pls
4456 4682 Pls
4408 4689 Pls
4360 4696 Pls
4309 4702 Pls
4260 4708 Pls
4209 4712 Pls
4159 4716 Pls
4109 4719 Pls
4057 4722 Pls
4006 4723 Pls
3954 4724 Pls
3902 4724 Pls
3851 4723 Pls
3799 4721 Pls
3745 4718 Pls
3693 4715 Pls
3640 4710 Pls
3586 4704 Pls
3533 4698 Pls
3477 4690 Pls
3423 4682 Pls
3369 4672 Pls
3314 4662 Pls
3258 4650 Pls
3203 4637 Pls
3147 4623 Pls
3089 4607 Pls
3030 4590 Pls
2972 4572 Pls
2910 4550 Pls
2848 4528 Pls
2789 4505 Pls
2730 4480 Pls
2673 4455 Pls
2615 4428 Pls
2557 4399 Pls
2498 4368 Pls
2440 4335 Pls
2381 4300 Pls
2324 4263 Pls
2268 4226 Pls
2213 4187 Pls
2159 4145 Pls
2104 4101 Pls
2045 4051 Pls
1987 3998 Pls
1931 3944 Pls
1875 3885 Pls
1822 3825 Pls
1771 3762 Pls
1721 3695 Pls
1672 3624 Pls
1626 3550 Pls
1583 3474 Pls
1540 3387 Pls
1501 3299 Pls
1468 3209 Pls
1439 3119 Pls
1416 3028 Pls
1398 2936 Pls
1385 2844 Pls
1378 2752 Pls
1375 2660 Pls
1378 2567 Pls
1385 2475 Pls
1398 2383 Pls
1416 2292 Pls
1439 2201 Pls
1468 2110 Pls
1501 2020 Pls
1540 1931 Pls
1585 1843 Pls
1634 1756 Pls
1689 1670 Pls
1742 1596 Pls
1799 1523 Pls
1860 1451 Pls
1926 1381 Pls
1988 1321 Pls
2053 1262 Pls
2122 1204 Pls
2194 1148 Pls
2257 1102 Pls
2323 1057 Pls
2392 1014 Pls
2463 972 Pls
2527 937 Pls
2593 903 Pls
2661 870 Pls
2732 839 Pls
2794 813 Pls
2860 788 Pls
2927 763 Pls
2996 741 Pls
3067 719 Pls
3128 702 Pls
3194 685 Pls
3262 669 Pls
3323 656 Pls
3387 644 Pls
3452 633 Pls
3518 624 Pls
3577 617 Pls
3637 610 Pls
3698 605 Pls
3760 601 Pls
3823 598 Pls
3887 596 Pls
3943 596 Pls
3999 597 Pls
4056 598 Pls
4114 601 Pls
4173 605 Pls
4233 610 Pls
4286 615 Pls
4340 621 Pls
4394 629 Pls
4449 637 Pls
4505 647 Pls
4555 657 Pls
4606 667 Pls
4657 679 Pls
4708 691 Pls
4760 705 Pls
4813 720 Pls
4866 736 Pls
4913 751 Pls
4961 767 Pls
5009 785 Pls
5057 803 Pls
5106 822 Pls
5155 843 Pls
5204 865 Pls
5253 888 Pls
5303 913 Pls
5353 939 Pls
5403 966 Pls
5454 995 Pls
5505 1026 Pls
5550 1055 Pls
5594 1084 Pls
5633 1112 Pls
5672 1140 Pls
5711 1169 Pls
5744 1195 Pls
5778 1223 Pls
5812 1251 Pls
5845 1281 Pls
5879 1311 Pls
5908 1339 Pls
5936 1367 Pls
5965 1396 Pls
5993 1426 Pls
6021 1457 Pls
6049 1489 Pls
6076 1521 Pls
6103 1555 Pls
6130 1590 Pls
6156 1625 Pls
6181 1661 Pls
6206 1699 Pls
6231 1737 Pls
6254 1776 Pls
6277 1816 Pls
6297 1852 Pls
6316 1889 Pls
6334 1927 Pls
6350 1960 Pls
6365 1995 Pls
6379 2029 Pls
6393 2065 Pls
6405 2100 Pls
6418 2137 Pls
6429 2174 Pls
6440 2211 Pls
6450 2248 Pls
6459 2286 Pls
6467 2325 Pls
6475 2364 Pls
6481 2403 Pls
6487 2442 Pls
6492 2481 Pls
6496 2521 Pls
6498 2556 Pls
6500 2592 Pls
6501 2627 Pls
6501 2660 Pls
6622 4599 Pls
1.000 UL
LTb
686 4872 N
686 448 L
6304 0 V
0 4424 V
-6304 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
